.. include:: ../common_roles/common.rst

=================================================
Verilog Handnotes 01 —— 大规模逻辑设计指导书 [#]_
=================================================

笔记
######

.. _Verilog语言编写规范:

Verilog语言编写规范
-------------------

-  末尾的_n或_b表示低电平有效——p30
-  顶层模块应避免包含逻辑，仅为内部模块的互联
-  模块例化采用名称映射
-  对所有模块的输出加以寄存，使得输出的驱动强度和输入的延迟可以预测，从而使得模块的综合过程更简单
-  关键路径和非关键路径放在不同模块，利于DC优化，关键路径采取速度优化，而非关键路径采取面积优化。(DC优化一般以模块为边界进行优化，在同一模块无法实现不同综合策略)
-  MSB/LSB： data[-4:0]则MSB[-4][-3][-2][-1][0]LSB，data[0:4]则MSB[0][1][2][3][4]LSB，推荐data[4:0]则MSB[4][3][2][1][0]LSB 
-  进行比较时，若位宽不同，则显式的进行扩展
-  case一般比if快，if的优先编码器仅在信号达到有先后时使用，条件赋值综合结果与case相同，但case仿真速度更快
-  内部总线不要悬空，在default状态要上拉或下拉
-  所有的`define放到一个文件中
-  在语法块的结尾做标记，// end with the name 如 // end fulladder
-  条件算式中不存在资源共享，等效的if-else则可以，如

.. code-block:: verilog

    z = (cond) ? (a + b) : (c + d)

无法资源共享，而

.. code-block:: verilog

    if(cond)
        z = a + b;
    else
        z = c + d;

则可以 - 使用同步复位 - testbench中避免使用绝对时间，而应该定义parameter

可编程ASIC设计方法简介
----------------------

-  可编程ASIC设计最基本的流程：
   设计目标分析->功能模块划分->确定关键电路时序和模块间接口时序->具体电路设计->设计验证
-  时序是事先设计出来的，不是事后测出来的
-  通过静态时序分析进行的时序调整只是一种微调，对于大的时序调整，必须从设计本身来保证
-  接口透明，故障检查定位电路

同步电路的设计技术及规则
------------------------

-  建立时间要求，在两级触发器之间，组合逻辑的延时(实际是第一级触发器的Clk端到第二级触发器的D端的延时)+建立时间，必须比时钟周期加时钟偏移短，(即信号必须比时钟更快到达第二级，组合逻辑延时不能太大，时钟频率不能太高)
-  保持时间要求，在两级触发器之间，组合逻辑的延时必须大于时钟偏移+保持时间(即信号到达后必须维持，或第一拍的数据必须在时钟沿到达Clk2时仍维持Tsetup)
-  在同步电路中由于时钟来自时钟PAD或时钟BUFF(全局时钟)，则时钟偏移对电路影响很小
-  单一异步控制信号的跨时钟域可以通过打拍子来实现，如果输入信号有两条以上，需要引入同步调整电路
-  上升下降沿检测，将输入信号延时一拍，之后将延时信号与原信号异或，将边沿转换为电平
-  不建议使用组合逻辑时钟和门控时钟，如不可避免，应在产生信号的模块位于顶层设计的一个独立模块中

.. _VHDL数字电路设计指导:

VHDL数字电路设计指导
--------------------

-  在同步电路设计里，一个原则是：凡是分频信号，一般不作为时钟信号，而是作为控制信号
-  处理速度与面积问题的一个原则是：向关键路径(部分)要时间(减少逻辑级数)，向非关键路径(部分)要面积(尽量共享已有逻辑)
-  对于比较器，应当尽量根据电路特点，抽取出“固定部分”，减少变化部分
-  减少关键路径延时的常用方法，给最迟到达的信号最高优先级，这样能减少关键路径的级数
-  对于循环语句，尽量将运算符放到循环外，循环体用于输入信号选择，这样可以复用运算模块
-  one-hot编码可以降低状态转移电路的实现逻辑的复杂度，但是由于引入了更大的状态空间，其非法(未定义)状态检测电路需要更多的逻辑 

代码可重用性
------------

建议使用以下端口声明次序：

.. code-block:: verilog

    inputs
        clocks
        resets
        enables
        other control signals
        data and address lines
    outputs
        clocks
        resets
        enables
        other control signals
        data

-  在输入输出端口之间加一个空行以提高可读性
-  使用函数代替重用代码，函数要加注释
-  在仿真时，数组比for loop快得多，尽量使用数组用向量操作而非for loop
-  使用parameter代替固定位宽等
-  避免使用多时钟沿，在不可避免时，尽量将上升沿和下降沿触发的寄存器放到不同模块
-  避免使用手动例化的时钟buffer，时钟buffer一般时在综合后物理设计时插入
-  避免内部产生复位信号，确保所有寄存器只被简单复位信号控制，通常模块内所有寄存器应在同一时间内被复位
-  避免使用任何的latch
-  避免使用组合反馈电路
-  定义完整的敏感列表



待解决(包括问题)
##################

Verilog语言编写规范
-------------------

1. :del:`“名字一般首字母大写，其余小写(但parameter，integer定义的数值名可全部用大写)，两个词之间要用下划线连接”
   “自己定义的常数、类型等用大写标识” ——p30
   ——习惯Linux命名习惯，首字母是否一定要大写`
2. |check| 文件头描述
3. |check| 每行应限制在80(72)个字符
4. |check| 输出驱动的强度都等于平均的触发器的驱动强度
5. |check| function与task：function可以理解为一个组合逻辑块(一个或多个表达式)的抽象，其必须有一个或以上的input，其返回值便是逻辑块的输出。故function内部不应当含有非阻塞或过程连续赋值语句(procedual continuous assignment，包括assign/deassign和force/release);task则是一个过程块的抽象，所以task可以包含组合逻辑(function)或时序逻辑


.. code-block:: verilog

    function [width0: 0] function_name (input [width1: 0] input_name); 
    begin
        // code
    end
    endfunction
    // 或
    function [width0: 0] function_name;
    input [width1: 0] input_name;
    begin
        // code
    end
    endfunction

    task task_name (input [width0: 0] a, input [width1: 0] b, output [width2: 0] c);
    begin
        // code
    end
    endtask
    // 或
    task task_name;
    input [width0: 0] a;
    input [width1: 0] b;
    output [width2: 0] c;
    begin
        // code
    end
    endtask

6. |uncheck| 函数与任务的调用均为静态调用
7. :del:`对于任何reg赋值，用非阻塞赋值代替阻塞赋值，reg的非阻塞赋值要加单位延迟，但异步复位可加可不加`

可编程ASIC设计方法简介
----------------------

1. |uncheck| 在进行静态时序分析时，分析工具需要设计者给出“合法路径”，由分析工具自动的完成时序分析，如路径延时等信息。需要设计者对所有路径提出具体的时序要求如I/O管脚之间时序要求

同步电路的设计技术及规则
------------------------

1. |check| 在FPGA设计中，推荐所有的输入、输出信号均应通过寄存器寄存，寄存器接口当作异步接口考虑

VHDL数字电路设计指导
--------------------

1. |check| Barrel Shifter
    具有n个数据输入和n个数据输出，以及指定如何移动数据的控制输入，指定移位方向、移位类型(循环、算术还是逻辑移位)及移动的位数

.. footnotes
.. [#] 读书笔记 (大规模逻辑设计指导书)2020-12-11
